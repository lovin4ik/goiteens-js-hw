const button = document.querySelector('.btn-begin')

const lesson19 = () => {
	//todo [1]
	console.log('%c [1] ', 'color: yellow; background-color: #2274A5')
	//? üî∏ –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –≤ —è–∫–æ–º—É —î —Ç—Ä–∏ —Ä–∞–¥—ñ–æ–±–∞—Ç–æ–Ω–∏ –∑—ñ –∑–Ω–∞—á–µ–Ω—è–º–∏ –∫–æ–ª—å—Ä—ñ–≤.
	//? –ü—Ä–∏ –æ–±–∏—Ä–∞–Ω–Ω—ñ –Ω–∞ –±—É–¥—å —è–∫–æ–≥–æ, –∫–æ–ª—ñ—Ä —Ñ–æ–Ω—É –±–æ–¥—ñ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ.
	//? ‚ú¥Ô∏è –í HTML —î —Ç–∞–∫–∞ —Ñ–æ—Ä–º–∞:
	/*
		<form class="html-box">
			<p>Choose a color:</p>
			<label>
			<input type="radio" name="color" value="red" />
			Red
			</label>
			<label>
			<input type="radio" name="color" value="white" checked />
			White
			</label>
			<label>
			<input type="radio" name="color" value="green" />
			Green
			</label>
		</form>
	*/
	//! –ö–æ–¥ –≤–∏–∫–æ–Ω–∞–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è

	class COLORS {
		static RED = '#ea241e'
		static WHITE = '#e3e3e3'
		static GREEN = '#bde052'
	}

	const formWrapper = document.querySelector('.html-form')

	const selectedColor = formWrapper.querySelector('input:checked').value
	formWrapper.style.backgroundColor =
		selectedColor === 'red'
			? COLORS.RED
			: selectedColor === 'white'
			? COLORS.WHITE
			: COLORS.GREEN

	const changeColor = e => {
		e.preventDefault()

		const activeColor = e.currentTarget.color.value

		formWrapper.style.backgroundColor =
			activeColor === 'red'
				? COLORS.RED
				: activeColor === 'white'
				? COLORS.WHITE
				: COLORS.GREEN
	}

	formWrapper.addEventListener('change', changeColor)

	console.log('--------------------------------------------------')

	//todo [2]
	console.log('%c [2] ', 'color: yellow; background-color: #2274A5')
	//? üî∏ –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —è–∫–∏–π,
	//? –ø—Ä–∏ –Ω–∞–±–æ—Ä—ñ —Ç–µ–∫—Å—Ç—É –≤ —ñ–Ω–ø—É—Ç input#name-input (–ø–æ–¥—ñ—è input),
	//? –ø—ñ–¥—Å—Ç–∞–≤–ª—è—î –π–æ–≥–æ –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ span#name-output.
	//? –Ø–∫—â–æ —ñ–Ω–ø—É—Ç –ø–æ—Ä–æ–∂–Ω—ñ–π, –≤ —Å–ø–∞–Ω—ñ –ø–æ–≤–∏–Ω–µ–Ω –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏—Å—è —Ä—è–¥–æ–∫ "–ù–ï–ó–ù–ê–ô–û–ú–ï–¶–¨".
	//? ‚ú¥Ô∏è –í HTML —î —Ç–∞–∫—ñ –µ–ª–µ–º–µ–Ω—Ç–∏:
	/*
		<input type="text" placeholder="–í–∞—à–µ —ñ–º'—è?" id="name-input" />
		<h1>–ü—Ä–∏–≤—ñ—Ç, <span id="name-output">–Ω–µ–∑–Ω–∞–π–æ–º–µ—Ü—å</span>!</h1>
	*/
	//! –ö–æ–¥ –≤–∏–∫–æ–Ω–∞–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è

	const inputName = document.querySelector('#name-input')
	const outputText = document.querySelector('#name-output')

	const changeText = e => {
		outputText.textContent = e.currentTarget.value || '–Ω–µ–∑–Ω–∞–π–æ–º–µ—Ü—å'
	}

	inputName.addEventListener('input', changeText)

	console.log('--------------------------------------------------')

	//todo [3]
	console.log('%c [3] ', 'color: yellow; background-color: #2274A5')
	//? üî∏ –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –±–∏ –ø—Ä–∏ –≤—Ç—Ä–∞—Ç—ñ —Ñ–æ–∫—É—Å–∞ –Ω–∞ —ñ–Ω–ø—É—Ç,
	//? –ø–µ—Ä–µ–≤—ñ—Ä—è–≤ –π–æ–≥–æ –≤–º—ñ—Å—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–∏–º–≤–æ–ª—ñ–≤.
	//? ‚ú¥Ô∏è –í HTML —î —Ç–∞–∫–∏–π input:
	/*
		<input
			type="text"
			id="validation-input"
			data-length="6"
			placeholder="–í–≤–µ–¥–∏ 6 —Å–∏–º–≤–æ–ª—ñ–≤"
		/>
	*/
	//? üî∏ –°–∫—ñ–ª—å–∫–∏ —Å–∏–º–≤–æ–ª—ñ–≤ –º–∞—î –±—É—Ç–∏ –≤ —ñ–Ω–ø—É—Ç,
	//? –≤–∫–∞–∑—É—î—Ç—å—Å—è –≤ –π–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç—ñ data-length.
	//? üî∏ –Ø–∫—â–æ –≤–≤–µ–¥–µ–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞–±–æ –±—ñ–ª—å—à–µ,
	//? —Ç–æ border —ñ–Ω–ø—É—Ç —Å—Ç–∞—î –∑–µ–ª–µ–Ω–∏–º,
	//? —è–∫—â–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ - —á–µ—Ä–≤–æ–Ω–∏–º.
	//? ‚ú¥Ô∏è –î–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å—Ç–∏–ª—ñ–≤, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π CSS-–∫–ª–∞—Å–∏ valid —ñ invalid:
	/*
		#validation-input {
			border: 3px solid #bdbdbd;
		}

		#validation-input.valid {
			border-color: #4caf50;
		}

		#validation-input.invalid {
			border-color: #f44336;
		}
	*/
	//! –ö–æ–¥ –≤–∏–∫–æ–Ω–∞–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è

	const validationInput = document.querySelector('#validation-input')
	const dataLength = validationInput.dataset.length

	const checkLengthInput = () => {
		if (validationInput.value.length === Number(dataLength)) {
			validationInput.classList.add('valid')
			validationInput.classList.remove('invalid')
		} else if (validationInput.value.length == 0) {
			validationInput.classList.remove('valid')
			validationInput.classList.remove('invalid')
		} else {
			validationInput.classList.add('invalid')
			validationInput.classList.remove('valid')
		}
	}

	validationInput.addEventListener('input', checkLengthInput)

	console.log('--------------------------------------------------')

	//todo [4]
	console.log('%c [4] ', 'color: yellow; background-color: #2274A5')
	//? üî∏ –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π —Ä–µ–∞–≥—É—î
	//? –Ω–∞ –∑–º—ñ–Ω—É –∑–Ω–∞—á–µ–Ω–Ω—è input#font-size-control (–ø–æ–¥—ñ—è input)
	//? —ñ –∑–º—ñ–Ω—é—î —ñ–Ω–ª–∞–π–Ω-—Å—Ç–∏–ª—å span#text,
	//? –æ–Ω–æ–≤–ª—é—é—á–∏ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å font-size.
	//? –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –ø—Ä–∏ –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—ñ –ø–æ–≤–∑—É–Ω–∫–∞ –∑–º—ñ–Ω—é–≤–∞—Ç–∏–º–µ—Ç—å—Å—è —Ä–æ–∑–º—ñ—Ä —Ç–µ–∫—Å—Ç—É.
	//? ‚ú¥Ô∏è –í HTML —î —Ç–∞–∫—ñ –µ–ª–µ–º–µ–Ω—Ç–∏:
	/*
		<span id="text">–ê–±—Ä–∞–∫–∞–¥–∞–±—Ä–∞!</span>
		<br />
		<input id="font-size-control" type="range" />
	*/
	//! –ö–æ–¥ –≤–∏–∫–æ–Ω–∞–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è

	const fontSizeControl = document.querySelector('#font-size-control')
	const textControl = document.querySelector('#text')

	const changeFontSize = () => {
		textControl.style.fontSize = fontSizeControl.value + 'px'
	}

	changeFontSize()

	fontSizeControl.addEventListener('input', changeFontSize)

	console.log('--------------------------------------------------')
}

button.addEventListener('click', lesson19)
